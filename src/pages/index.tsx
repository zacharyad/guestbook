import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";
import Messages from "./Messages";
import MessagesForm from "./MessagesForm"
import { trpc } from "../utils/trpc";

const Home: NextPage = () => {
  const {data: session, status} = useSession()

  if(status === "loading"){
    return <main>Loading...</main>
  }

  return (
    <div className="max-h-screen">
      <Head>
        <title>Zach's GuestBook</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="flex flex-col flex-grow items-center justify-between">
        <header className="flex flex-col items-center py-4 px-1">
          <h1 className="text-3xl pt-4">Welcome to Zach's QuestBook,</h1>
          {
            session ? 
            <p>where you ( {session.user?.name} ) can see messages...</p> :
            <div>A place to post a message to me and the world.</div>
          }
        </header>


        <div className="overflow-scroll rounded py-2 px-4 bg-slate-400 bg-blur-lg bg-opacity-25">
          {session ? (
            <div className="h-96 overflow-scroll">
              <Messages />
              <div className="absolute bottom-0 bg-slate-300 blur-lg bg-opacity-10 left-0 w-screen h-16"></div>
            </div>
            
          ) : (
            <div>
              
            </div>
          )}
        </div>
    

        <div className="pt-2">
          {session ? (
            <div>
              <div className="pt-6">
                <MessagesForm />
              </div>

              <div className="flex flex-col items-center pt-2">
                <p className="text-gray-300">Or if you are not into it, you can...</p>
                <button className="bg-gray-600 text-slate-100 py-1 px-4 mt-4" onClick={() => signOut()}>Logout?</button>
              </div>
            </div>
          ) : (
            <div>
              <button className="bg-gray-100 text-slate-600 py-1 px-4 mt-4" onClick={() => signIn("discord")}>
                Login with Discord
              </button>
            </div>
          )}
        </div>
      </main>
    </div>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = trpc.auth.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined },
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData?.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => signOut() : () => signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
